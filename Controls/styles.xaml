<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Controls">
  <LinearGradientBrush x:Key="test" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE8E8E8" Offset="1"/>
    <GradientStop Color="#F9CBAF73" Offset="0.35"/>
    <GradientStop Color="#FFCB9D3B" Offset="0.837"/>
    <GradientStop Color="#E5AAA986"/>
  </LinearGradientBrush>

  <!--BRUSHES-->
  <SolidColorBrush x:Key="Brush.Expander.MouseOver.Circle.Stroke" Color="#FF5593FF"/>
  <SolidColorBrush x:Key="Brush.Expander.MouseOver.Circle.Fill" Color="#FFF3F9FF"/>
  <SolidColorBrush x:Key="Brush.Expander.MouseOver.Arrow.Stroke" Color="#FF000000"/>
  <SolidColorBrush x:Key="Brush.Expander.Pressed.Circle.Stroke" Color="#FF3C77DD"/>
  <SolidColorBrush x:Key="Brush.Expander.Pressed.Circle.Fill" Color="#FFD9ECFF"/>
  <SolidColorBrush x:Key="Brush.Expander.Pressed.Arrow.Stroke" Color="#FF000000"/>
  <SolidColorBrush x:Key="Brush.Expander.Disabled.Circle.Stroke" Color="#FFBCBCBC"/>
  <SolidColorBrush x:Key="Brush.Expander.Disabled.Circle.Fill" Color="#FFE6E6E6"/>
  <SolidColorBrush x:Key="Brush.Expander.Disabled.Arrow.Stroke" Color="#FF707070"/>
  <SolidColorBrush x:Key="Brush.Expander.Static.Circle.Fill" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="Brush.Expander.Static.Circle.Stroke" Color="#FF333333"/>
  <SolidColorBrush x:Key="Brush.Expander.Static.Arrow.Stroke" Color="#FF333333"/>
  <SolidColorBrush x:Key="Brush.Border.Standard" Color="Black"/>
  <SolidColorBrush x:Key="Brush.Border.NonEmphasized" Color="DarkGray"/>
  <SolidColorBrush x:Key="Brush.TextBox.Background" Color="White" />
  <SolidColorBrush x:Key="Brush.Error" Color="Red"/>
  <SolidColorBrush x:Key="Brush.WaitAnimation.FillColor" Color="LightGray" />
  <SolidColorBrush x:Key="Brush.Jobs.SectionElement" Color="#1047A9" />
  <SolidColorBrush x:Key="Brush.Jobs.ElementItem" Color="#00675C" />
  <SolidColorBrush x:Key="Brush.Jobs.FolderItem" Color="#A64600" />
  
  <!--Full Stretch Expander-->
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle" Fill="{StaticResource Brush.Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Brush.Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Brush.Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
              </Grid>
              <ContentPresenter HorizontalAlignment="Center" Margin="2" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.MouseOver.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Stroke}"/>
              <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Pressed.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Disabled.Arrow.Stroke}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle" Fill="{StaticResource Brush.Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Brush.Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Brush.Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
              </Grid>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="2" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.MouseOver.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Stroke}"/>
              <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Pressed.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Disabled.Arrow.Stroke}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <Grid.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </Grid.LayoutTransform>
                <Ellipse x:Name="circle" Fill="{StaticResource Brush.Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Brush.Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
                <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Brush.Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
              </Grid>
              <ContentPresenter HorizontalAlignment="Center" Margin="2" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.MouseOver.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Stroke}"/>
              <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Pressed.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Disabled.Arrow.Stroke}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="False">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle" Fill="{StaticResource Brush.Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Brush.Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
              <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Brush.Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
              <ContentPresenter Grid.Column="1" HorizontalAlignment="Stretch" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
              <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.MouseOver.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.MouseOver.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Stroke}"/>
              <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Pressed.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Pressed.Arrow.Stroke}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Stroke" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Stroke}"/>
              <Setter Property="Fill" TargetName="circle" Value="{StaticResource Brush.Expander.Disabled.Circle.Fill}"/>
              <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Brush.Expander.Disabled.Arrow.Stroke}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="StretchExander" TargetType="{x:Type Expander}">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Margin" Value="2"/>
    <Setter Property="Padding" Value="2" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="BorderBrush" Value="Black" />
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border CornerRadius="3" SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" 
                            DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" 
                            FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" 
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                            Margin="2" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" 
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
              <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
              <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Right">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Up">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
            </Trigger>
            <Trigger Property="ExpandDirection" Value="Left">
              <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
              <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
              <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
              <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
